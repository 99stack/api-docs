openapi: 3.0.2
info:
  title: 99Stack API documentation
  version: '1.1'
  contact: {}
  description: |-
    **Mirrors**:
      * https://api.eu-central.aws.99stack.com/docs/
      * https://api.eu-west.aws.99stack.com/docs/
      * https://api.us-east.aws.99stack.com/docs/
      * https://api.us-west.aws.99stack.com/docs/
      * https://api.au-east.aws.99stack.com/docs/
      * https://api.as-east.aws.99stack.com/docs/
      * https://api.as-south.aws.99stack.com/docs/
 
    **Control panel GUI**:
      * https://dash.99stack.com

    ## Using the API

    ### Information

    99Stack API is designed to be fast, secure and reliable. Requests and responses are in JSON format (Content-Type: application/json) and requests follows the following format: `version/object/function`, alternatively `version/object/function/args` for `GET` functions that takes one single argument. Standard HTTP error codes are used together with status messages to indicate status.

    ### Response codes

    Each response comes with a HTTP status code, this code indicates the status of your request. Any 2xx response indicates success. 4xx responses indicates an error in data input, access, rate-limits or software errors. 5xx indicates server errors or errors in external resources.

    | HTTP Response Code  | Description  | Note
    |---|---|---|
    | 200  | OK | Used in `GET` responses | 
    | 201  | Created | Resource creation was successfull | 
    | 202  | Accepted | Method executed successfully  | 
    | 204  | No Response| Resource was successfully removed |
    | 301  | Moved Permanently | Function is deprecated  |
    | 400  | Bad Request | See response message for more details | 
    | 401  | Unauthorized | Invalid auth token | 
    | 402  | Payment required | Account balance is too low | 
    | 403  | Forbidden | Method not allowed for authorized account | 
    | 404  | Not Found | Resource does not exist, or is not available | 
    | 405  | Method Not Allowed | Incorrect HTTP method, see response message for more details | 
    | 429  | Too many requests | Rate limit was hit, try again in a few seconds|
    | 500  | Internal Server Error | Communication error in our system |
    | 501  | Not Implemented  | Function does not exist, check spelling |
    | 502  | Bad Gateway | Failed to contact remote servers, or proxy error  |
    | 503  | Service Unavailable | Maintenance in progress  |
    | 504  | Gateway Timeout | Back-end servers was unable to handle your request |

    ### Rate limits

    The general rate limit is 2 requests per second with a burst of 10 requests. Some functions has additional limits, `/v1/account` allows 5 requests per minute with a burst of 5 for security. Create requests are generally limited to 1 request per second without burst.

    ### Time and Date

    All time and date fields returned by this API are displayed in UTC in the ISO-8601 format. `Y-m-d\TH:i:s\Z`

    ### Examples

    `GET` request with no arguments:

    ```bash
    curl -X GET \
      "https://api.99stack.com/v1/region/list"
    ```

    `GET` request that requires your API token:

    ```bash
    curl -X GET \
      -H 'Authorization: Bearer YOUR_TOKEN' \
      "https://api.99stack.com/v1/server/list"
    ```

    `POST` request containing a JSON request body:

    ```bash 
    curl -X POST \
      -H 'Authorization: Bearer YOUR_TOKEN' \
      -H 'Content-Type: application/json' \
      -d '{"name": "New API token"}'  \
      "https://api.99stack.com/v1/account/token_create"
    ```

    `DELETE` request containing a JSON request body:

    ```bash
    curl -X DELETE \
      -H 'Authorization: Bearer YOUR_TOKEN' \
      -H 'Content-Type: application/json' \
      -d '{"server_id": 16324}' \
      "https://api.99stack.com/v1/server/remove"
    ```

    # Authentication

    For any API request that requires authentication, the Authorization header needs to be set to a valid Bearer token, these tokens can be generated in the [control panel](https://dash.99stack.com/auth/manage-api-tokens), or by sending a valid request to `/v1/account/login`. Once you have the token, use the following format:

    ```bash
    Authorization: Bearer YOUR_TOKEN
    ```

    See examples above for usage with cURL.
  termsOfService: 'https://www.99stack.com/legal/terms-of-service'
  license:
    name: MIT
    url: 'https://github.com/99stack/api-docs/blob/master/LICENSE'
servers:
  - url: 'https://api.99stack.com/v1'
    variables: {}
    description: Global
  - url: 'https://api.eu-west.aws.99stack.com/v1'
    variables: {}
    description: eu-west (Ireland)
  - url: 'https://api.eu-central.aws.99stack.com/v1'
    variables: {}
    description: eu-central (Germany)
  - url: 'https://api.us-east.aws.99stack.com/v1'
    variables: {}
    description: us-east (Virginia - USA)
  - url: 'https://api.us-west.aws.99stack.com/v1'
    variables: {}
    description: us-west (Oregon - USA)
  - url: 'https://api.as-east.aws.99stack.com/v1'
    variables: {}
    description: as-east (South Korea)
  - url: 'https://api.as-south.aws.99stack.com/v1'
    variables: {}
    description: as-south (India)
  - url: 'https://api.au-east.aws.99stack.com/v1'
    variables: {}
    description: au-east (Australia)

paths:
  /account/token_list:
    $ref: ./paths/account_token/list.yaml
  /account/token_create:
    $ref: ./paths/account_token/create.yaml
  /account/token_rename:
    $ref: ./paths/account_token/rename.yaml
  /account/token_remove:
    $ref: ./paths/account_token/remove.yaml

  /account/info:
    $ref: ./paths/account/info.yaml
  /account/register:
    $ref: ./paths/account/register.yaml
  /account/activate:
    $ref: ./paths/account/activate.yaml
  /account/login:
    $ref: ./paths/account/login.yaml
  /account/password:
    $ref: ./paths/account/change_passwd.yaml
  /account/reset:
    $ref: ./paths/account/reset.yaml

  /transaction/list:
    $ref: ./paths/billing/list_trans.yaml
  /invoice/list:
    $ref: ./paths/billing/list_invoice.yaml
  /invoice/sum:
    $ref: ./paths/billing/sum_invoice.yaml

  /snapshot/list:
    $ref: ./paths/snapshot/list.yaml
  /snapshot/create:
    $ref: ./paths/snapshot/create.yaml
  /snapshot/restore:
    $ref: ./paths/snapshot/restore.yaml
  /snapshot/remove:
    $ref: ./paths/snapshot/remove.yaml

  /server/list:
    $ref: ./paths/server/list.yaml
  /server/info:
    $ref: ./paths/server/info.yaml
  /server/create:
    $ref: ./paths/server/create.yaml
  /server/stop:
    $ref: ./paths/server/stop.yaml
  /server/start:
    $ref: ./paths/server/start.yaml
  /server/reboot:
    $ref: ./paths/server/reboot.yaml
  /server/ping:
    $ref: ./paths/server/ping.yaml
  /server/remove:
    $ref: ./paths/server/remove.yaml

  /server/ddos_protection:
    $ref: ./paths/server/features/ddos.yaml
  /server/ipv6:
    $ref: ./paths/server/features/ipv6.yaml
  /server/private_networking:
    $ref: ./paths/server/features/private_network.yaml

  /floating_ip/list:
    $ref: ./paths/network/ipv4/list.yaml
  /floating_ip/create:
    $ref: ./paths/network/ipv4/create.yaml
  /floating_ip/attach:
    $ref: ./paths/network/ipv4/attach.yaml
  /floating_ip/detach:
    $ref: ./paths/network/ipv4/detach.yaml
  /floating_ip/remove:
    $ref: ./paths/network/ipv4/remove.yaml

  /ssh_key/list:
    $ref: ./paths/ssh_key/list.yaml
  /ssh_key/create:
    $ref: ./paths/ssh_key/create.yaml
  /ssh_key/rename:
    $ref: ./paths/ssh_key/rename.yaml
  /ssh_key/remove:
    $ref: ./paths/ssh_key/remove.yaml

  /backup/restore:
    $ref: ./paths/backup/restore.yaml
  /backup/enable:
    $ref: ./paths/backup/enable.yaml
  /backup/disable:
    $ref: ./paths/backup/disable.yaml

  /region/list:
    $ref: ./paths/_public/region.yaml
  '/image/list/{region_id}':
    $ref: ./paths/_public/image.yaml
  '/plan/list/{region_id}':
    $ref: ./paths/_public/plan.yaml
  /availability/list:
    $ref: ./paths/_public/availibility.yaml
  '/feature/list/{region_id}':
    $ref: ./paths/_public/feature.yaml

  /volume/list:
    $ref: ./paths/volume/list.yaml
  /volume/create:
    $ref: ./paths/volume/create.yaml
  /volume/attach:
    $ref: ./paths/volume/attach.yaml
  /volume/detach:
    $ref: ./paths/volume/detach.yaml
  /volume/remove:
    $ref: ./paths/volume/remove.yaml

x-tagGroups:
  - name: Information
    tags:
      - Public
  - name: Account
    tags:
      - Account
      - Billing
      - SSH Keys
      - Token
  - name: Server
    tags:
      - Actions
      - Features
      - Backup
  - name: Storage
    tags:
      - Snapshot
      - Block storage
      - Object storage
  - name: Network
    tags:
      - Floating IPs
tags:
  - name: Account
    description: Manage account and sub-accounts. View status and enabled features.
  - name: Billing
    description: 'View account payment transactions, taxes, fees and detailed billing information sorted by resource'
  - name: Token
    description: Manage account tokens. Create and remove API tokens and
  - name: SSH Key
    description: 'Upload and manage your public SSH keys, these keys will be deployed to new servers upon creation, and used instead of password authentication.'
  - name: Floating IPs
    description: 'Create and manage network interfaces, IPv4 and IPv6 addresses'
  - name: Actions
    description: 'Create and manage server instances of various types'
  - name: Features
    description: 'Manage server features'
  - name: Snapshot
    description: 'Create, manage and restore snapshots and backups.'
  - name: Block storage
    description: 'Create and manage block storage devices that can be used and mounted similar to a local ssd drive.'
  - name: Object storage
    description: 'Create and manage S3 compatible object storage buckets.'
  - name: Public
    description: 'This section contains all information about regions, images, plans and features. The Authorization header is not required for any function in this section.'

components:
  headers:
    Content-Type:
      description: Should be set to application/json
      schema:
        type: string
    Authorization:
      description: "Must contain the following: 'Bearer auth_token' where auth_token is one of your accounts authentication tokens"
      schema:
        type: string
